openapi: 3.0.4
info:
  title: Boilerplate API
  description: |-
    API Boilerplate.
  version: 1.0.0
tags:
  - name: Customer
    description: Customer registration
paths:
  /v1/customers:
    get:
      tags:
        - Customer
      summary: Search Customers
      description: Search Customers
      operationId: searchCustomers
      parameters:
        - name: page
          in: query
          description: It indicate the page number
          required: true
          schema:
            type: integer
            format: int32
            default: 0
            example: 3
        - name: size
          in: query
          description: It indicate the page size
          required: true
          schema:
            type: integer
            format: int32
            default: 50
            example: 150
      responses:
        '200':
          description: Success in Customers search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResultCustomer'
        '400':
          description: Error to search Customers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Customer
      summary: Create a new Customer
      description: Create a new Customer
      operationId: createCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          description: Success to create a new Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/customers/{customerId}:
    parameters:
      - name: customerId
        in: path
        description: Customer id
        required: true
        schema:
          type: integer
          format: int64
          example: 183
    get:
      tags:
        - Customer
      summary: Retrieve a Customer
      description: Retrieve a Customer
      operationId: retrieveCustomer
      responses:
        '200':
          description: Success to retrieve Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - Customer
      summary: Partial update Customer
      description: Partial update Customer
      operationId: partialUpdateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Success in partial update Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Error in partial update Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Customer
      summary: Full Update Customer
      description: Full Update Customer
      operationId: FullUpdateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: Success to update Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Error to update Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Customer
      summary: Delete Customer
      description: Delete Customer
      operationId: DeleteCustomer
      responses:
        '200':
          description: Success to delete Customer
        '400':
          description: Error to delete Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Customer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          example: 847
        name:
          type: string
          example: Marry
        birth:
          type: string
          format: date
          example: 1980-11-27
    ErrorResponse:
      type: object
      properties:
        type:
          type: string
          format: uri
          example: about:blank
        title:
          type: string
          example: Internal server error
        status:
          type: integer
          format: int32
          example: 500
        detail:
          type: string
          example: Error to retrieve Customer
        instance:
          type: string
          format: uri
        properties:
          type: object
          additionalProperties:
            type: string
    PageResult:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
          example: 7
        totalElements:
          type: integer
          format: int64
          example: 435
    PageResultCustomer:
      allOf:
        - $ref: '#/components/schemas/PageResult'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
